name: Cypress Tests
env:
    VERCEL_ORG_ID: "${{ secrets.VERCEL_ORG_ID }}"
    VERCEL_PROJECT_ID: "${{ secrets.VERCEL_PROJECT_ID }}"
    GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

on: [pull_request]
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    install:
        runs-on: ubuntu-latest
        environment: preview
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Install Vercel CLI
              run: npm install --global vercel@latest

            - name: Pull Vercel Environment Information
              run: vercel env pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

            - name: Dotenv Mount
              uses: falti/dotenv-action@v1.0.4
              with:
                  path: .env
                  mask-variables: true
                  export-variables: true
                  keys-case: upper

            - name: Cypress install
              uses: cypress-io/github-action@v5.7.2 # use the explicit version number
              with:
                  # Disable running of tests within install job
                  runTests: false
                  build: npm run build
            - name: Save build folder
              uses: actions/upload-artifact@v3
              with:
                  name: build
                  if-no-files-found: error
                  path: build

    cypress-run-tests:
        runs-on: ubuntu-latest
        needs: install
        environment: preview
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Download the build folder
              uses: actions/download-artifact@v3
              with:
                  name: build
                  path: build

            - name: E2E on Chrome
              uses: cypress-io/github-action@v5.7.2
              with:
                  browser: chrome
                  start: npm run start
                  wait-on: "http://localhost:3000"
              env:
                  # pass GitHub token to detect new build vs re-run build
                  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

            - name: Uploading Screenshots
              uses: actions/upload-artifact@v3
              if: failure()
              with:
                  name: "cypress-screenshots"
                  path: cypress/screenshots

            # Test run video was always captured, so this action uses "always()" condition
            - name: Uploading Videos
              uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: cypress-videos
                  path: cypress/videos
